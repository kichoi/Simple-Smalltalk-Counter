"Example 1"| response url|	url := 'https://api.weather.gov/gridpoints/TOP/31,80/forecast'.	response := ZnClient new		url: url;   		enforceHttpSuccess: true;   		accept: ZnMimeType applicationJson;		get.	"Example 2"	url := 'https://api.weather.gov/gridpoints/TOP/31,80/forecast'.	response := ZnClient new		url: url;   		enforceHttpSuccess: true;   		accept: ZnMimeType applicationJson;		contentReader: [:entity| NeoJSONReader fromString: entity readStream];		get.		"Example 3"	url := 'https://api.weather.gov/gridpoints/TOP/31,80/forecast'.	response := ZnClient new		url: url;   		enforceHttpSuccess: true;   		accept: ZnMimeType applicationJson;		contentReader: [:entity| 			|reader| 			reader:=(NeoJSONReader on: entity readStream).			reader mapInstVarsFor: ForecastResponse.			reader nextAs: ForecastResponse.			];		get."Example 4"	url := 'https://api.weather.gov/gridpoints/TOP/31,80/forecast'.	response := ZnClient new		url: url;   		enforceHttpSuccess: true;   		accept: ZnMimeType applicationJson;		contentReader: [:entity| 			|reader| 			reader:=(NeoJSONReader on: entity readStream).			reader for: ForecastResponse do: [ :mapping |				mapping mapInstVar: #type.				mapping mapInstVar: #geometry.				(mapping mapInstVar: #properties) valueSchema: Forecast 				].			reader mapInstVarsFor: Forecast.			reader nextAs: ForecastResponse.			];		get.		"Example 5"	url := 'https://api.weather.gov/gridpoints/TOP/31,80/forecast'.	response := ZnClient new		url: url;   		enforceHttpSuccess: true;   		accept: ZnMimeType applicationJson;		contentReader: [:entity| 			|reader| 			reader:=(NeoJSONReader on: entity readStream).			reader for: ForecastResponse do: [ :mapping |				mapping mapInstVar: #type.				mapping mapInstVar: #geometry.				(mapping mapInstVar: #properties) valueSchema: #ForecastSchema				].			reader for: #ForecastSchema do: [ :mapping|				mapping subjectClass: Forecast.				mapping mapInstVars.				(mapping mapInstVar: #periods) valueSchema: #ArrayOfForecast.				 ].			reader for: #ArrayOfForecast customDo: [ :mapping| mapping listOfElementSchema: ForecastPeriod ].			reader mapInstVarsFor: ForecastPeriod.			reader nextAs: ForecastResponse.			];		get.